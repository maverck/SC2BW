include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: SC2BW
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libSCBW_ge_DamageModifier_None = 0;
const int libSCBW_ge_DamageModifier_Explosive = 1;
const int libSCBW_ge_DamageModifier_Concussive = 2;

// Structures
struct libSCBW_gs_GlobalPlayerVariables {
    int lv_cameraMode;
};

struct libSCBW_gs_Dialogconstants {
    int lv_dialogWindowHeight;
    int lv_dialogWindowWidth;
    int lv_dialogBorder;
    int lv_dialogLogoHeight;
    int lv_dialogLogoWidth;
    string lv_dialogLogo;
    string lv_dialogStatsButtonStyle;
    int lv_dialogStatsButtonWidth;
    int lv_dialogStatsButtonHeight;
    int lv_dialogStatsButtonAmount;
    int lv_dialogEditBoxWidth;
    int lv_dialogEditBoxHeight;
    text[5] lv_statsRaceButtonText;
    int[16] lv_statsSelectedRace;
    int[16] lv_statsSelectedPlayer;
    bool[16] lv_statsDialogOpen;
    int lv_statsDialogInformationSeperator;
    int lv_openStatsDialogSize;
};

struct libSCBW_gs_Dialogs {
    int[16] lv_statsDialog;
    int[16] lv_rankingDialog;
    int[16] lv_openStatsDialog;
    int[16] lv_openStatsButton;
    int[5][16] lv_statsDialogRaceButtons;
    int[4][16] lv_statsDialogPlayerButtons;
    int lv_realTimeMissionTimerDialog;
    int lv_realTimeMissionTimer;
};

struct libSCBW_gs_OtherStats {
    int[4][5] lv_osAPM;
    int[4][5] lv_osAverageGameLength;
    int[4][5] lv_osAverageGameLengthNEW;
    int[4][5] lv_osTotalEnemyUnitsKilled;
    int[4][5] lv_osTotalEnemyUnitsKilledNEW;
    int[4][5] lv_osTotalUnitsLost;
    int[4][5] lv_osTotalUnitsLostNEW;
    int[4][5] lv_osTotalDamageDealt;
    int[4][5] lv_osTotalDamageDealtNEW;
    int[4][5] lv_osTotalDamageTaken;
    int[4][5] lv_osTotalDamageTakenNEW;
    int[4][5] lv_osAverageWorkersTrained;
    int[4][5] lv_osAverageWorkersTrainedNEW;
    timer lv_osMissionTime;
};

struct libSCBW_gs_LadderRecord {
    string lv_encryptKey;
    string[4] lv_playerID;
    string lv_bankName;
    bank[4] lv_playerBanks;
    int[4][5] lv_playerPoints;
    int[4][5] lv_playerWins;
    int[4][5] lv_playerLosses;
    int[4] lv_playerRace;
    int[4][5][5][4] lv_playerMatchupStats;
    string lv_gamemodeName;
    string[4][14] lv_playerRatingName;
    fixed[4] lv_winnerPoints;
    fixed[4] lv_loserPoints;
    bool lv_victoryDecided;
    bool lv_ladderInitialized;
};

// Variable Declarations
bool libSCBW_gv_usingSC2BWTestMap;
text libSCBW_gv_version;
libSCBW_gs_GlobalPlayerVariables libSCBW_gv_globalPlayerVars;
int libSCBW_gv_gamemodeDialog;
int libSCBW_gv_gamemodeListbox;
int libSCBW_gv_gamemodeDialogSetButton;
int libSCBW_gv_gamemode;
point[51] libSCBW_gv_bases;
int libSCBW_gv_baseCount;
unitgroup libSCBW_gv_playerStartingUnits;
playergroup libSCBW_gv_players;
unitgroup libSCBW_gv_beingHarvested;
unitgroup libSCBW_gv_workers;
unit[257][9] libSCBW_gv_carriers;
unit[101][2] libSCBW_gv_nydusLink;
unitgroup libSCBW_gv_mineralFields;
unitgroup[11][15] libSCBW_gv_controlGroups;
unitgroup libSCBW_gv_breakForcedRallyInfiniteLoop;
unitgroup libSCBW_gv_airUnits;
unitgroup libSCBW_gv_ausMonitoredUnits;
unitgroup libSCBW_gv_ausBeingSpread;
libSCBW_gs_Dialogs libSCBW_gv_dialogs;
libSCBW_gs_Dialogconstants libSCBW_gv_dialogconstants;
libSCBW_gs_OtherStats libSCBW_gv_otherStats;
libSCBW_gs_LadderRecord libSCBW_gv_ladderRecord;

// Function Declarations
void libSCBW_gf_StarcodeStartCode ();
void libSCBW_gf_StarcodeStoreIntegerValue (int lp_value, int lp_maximumValue);
void libSCBW_gf_StarcodeSetCode (string lp_code);
void libSCBW_gf_StarcodeSetEncryptionAlphabet (string lp_string);
string libSCBW_gf_StarcodeGetCode ();
int libSCBW_gf_StarcodeGetIntegerValue (int lp_maximumValue);
string libSCBW_gf_StarcodeEncryptString (string lp_toEncrypt, string lp_key);
string libSCBW_gf_StarcodeCompressString (string lp_toCompress);
string libSCBW_gf_StarcodeHashString (string lp_toHash, int lp_securityLevel);
string libSCBW_gf_StarcodeRemoveHashfromString (string lp_string, int lp_securityLevel);
bool libSCBW_gf_StarcodeValidateString (string lp_toCheck, int lp_securityLevel);
string libSCBW_gf_StarcodeDecryptString (string lp_toDecrypt, string lp_key);
string libSCBW_gf_StarcodeDecompressString (string lp_toDecompress);
void libSCBW_gf_InitSC2BW ();
void libSCBW_gf_FixMinimap ();
void libSCBW_gf_FindBases ();
void libSCBW_gf_FixBases ();
void libSCBW_gf_FixSpawnPointsAndSpawnPlayers ();
void libSCBW_gf_OverrideMeleeInitMoveStartingUnits ();
void libSCBW_gf_RemoveMovedStartingUnits ();
fixed libSCBW_gf_getDamageAmt (unit lp_source, unit lp_target, fixed lp_damage, int lp_damageModifier);
void libSCBW_gf_ApplyDamage (unit lp_source, unit lp_target, string lp_sourceDamageEffect, string lp_damageApplyEffect, int lp_damageType, bool lp_miss);
bool libSCBW_gf_Miss (unit lp_source, unit lp_target);
point libSCBW_gf_getMissOffset (point lp_source, point lp_target);
fixed libSCBW_gf_getExplosiveDamage (fixed lp_originalDamage, unit lp_target);
fixed libSCBW_gf_getExplosiveDamageModifier (unit lp_target);
fixed libSCBW_gf_getConcussiveDamage (fixed lp_originalDamage, unit lp_target);
fixed libSCBW_gf_getConcussiveDamageModifier (unit lp_target);
fixed libSCBW_gf_getModifiedDamage (fixed lp_damage, unit lp_target, int lp_modifier);
void libSCBW_gf_AddStartingWorkersToGroup ();
void libSCBW_gf_WorkerVariableSpeed ();
bool libSCBW_gf_FreeMineralPatchNearby (unit lp_sourceUnit);
void libSCBW_gf_CheckBuildingLarvaEgg (int lp_player, int lp_group);
void libSCBW_gf_SetControlGrouptoBuilding (int lp_player, int lp_group, unit lp_unit);
void libSCBW_gf_Deselect12Units (int lp_player);
void libSCBW_gf_Deselect1Building (int lp_player);
bool libSCBW_gf_CheckUnitStackingRestrictions (unitgroup lp_selectedUnits);
bool libSCBW_gf_UnitatArrivedOrderPoint (unit lp_unit, order lp_order);
void libSCBW_gf_CheckAirUnitsToSpread ();
void libSCBW_gf_SpreadStackedAir (unit lp_unit);
void libSCBW_gf_CheckMovement (int lp_player, int lp_startindex, unitgroup lp_allunits);
void libSCBW_gf_CreateRealTimeTimer ();
void libSCBW_gf_InitiateSpectatorCamera (int lp_player);
void libSCBW_gf_CheckPlayersForSpectators ();
void libSCBW_gf_sSetArrays ();
void libSCBW_gf_sStatsInit ();
void libSCBW_gf_sCreateStatsDialog (int lp_xOffset, int lp_yOffset, int lp_anchor, int lp_uIPlayer, int lp_statsPlayer, bool lp_skip);
void libSCBW_gf_sCreateStatsDialogButtons (int lp_uIPlayer);
void libSCBW_gf_sCreateStatsInformation (int lp_uIPlayer, int lp_statsPlayer, int lp_statsRace);
void libSCBW_gf_sCreateOpenStatsButton (int lp_xOffset, int lp_yOffset, int lp_anchor);
text libSCBW_gf_sGetMatchupStat (int lp_statsPlayer, int lp_statsRace, int lp_statsRace2, int lp_winLose, bool lp_getLose);
int libSCBW_gf_sGetMatchupWinPercent (int lp_statsPlayer, int lp_statsRace2);
void libSCBW_gf_osLoadBankValues (int lp_player);
void libSCBW_gf_osUpdateStats (int lp_player);
void libSCBW_gf_osUpdateAPM (int lp_player);
void libSCBW_gf_osUpdateAverageGameLength (int lp_player);
void libSCBW_gf_osUpdateWorkersTrained (int lp_player);
void libSCBW_gf_osUpdateEnemyKilled (int lp_player);
void libSCBW_gf_osUpdateUnitsLost (int lp_player);
void libSCBW_gf_osUpdateDamageDealt (int lp_player);
void libSCBW_gf_osUpdateDamageTaken (int lp_player);
void libSCBW_gf_osSaveStats (int lp_player);
void libSCBW_gf_lInit (int lp_player);
void libSCBW_gf_lSetVariables ();
bool libSCBW_gf_lCheckLadderConditions ();
void libSCBW_gf_lLadderErrors ();
void libSCBW_gf_lPreloadBanks ();
void libSCBW_gf_lLoadBank (int lp_player);
void libSCBW_gf_lDisplayLadderRating (int lp_player);
int libSCBW_gf_lCheckNumberofPlayers ();
bool libSCBW_gf_lCheckforUsers ();
void libSCBW_gf_lLoadLadderStats (int lp_player);
void libSCBW_gf_lLoadMatchupStats (int lp_player);
int libSCBW_gf_lCheckGameMode ();
void libSCBW_gf_lSetGameMode ();
void libSCBW_gf_lCheckPlayerPointsNotBelowThreshold (int lp_player);
int libSCBW_gf_lGetRating (int lp_player);
int libSCBW_gf_lGetRatingSelectedRace (int lp_player, int lp_uIPlayer);
int libSCBW_gf_lGetRace (int lp_player);
text libSCBW_gf_lGetRaceLetter (int lp_player);
text libSCBW_gf_lGetRaceLetterFromInteger (int lp_race);
int libSCBW_gf_lGetOpponent (int lp_player);
string libSCBW_gf_lGetPlayerID (int lp_player);
void libSCBW_gf_lLoadPlayerID (int lp_player);
string libSCBW_gf_lCreateNewPlayerID ();
void libSCBW_gf_lSetInitialLose ();
void libSCBW_gf_lSetAdjustPointsRank (int lp_player);
void libSCBW_gf_lSetAdjustPointsRankD (int lp_player);
void libSCBW_gf_lSetAdjustPointsRankC (int lp_player);
void libSCBW_gf_lSetAdjustPointsRankB (int lp_player);
void libSCBW_gf_lSetAdjustPointsRankA (int lp_player);
bool libSCBW_gf_lCheckPlayerStatus (int lp_player);
void libSCBW_gf_lAwardWinner (int lp_player);
void libSCBW_gf_lLoseforLoser (int lp_player);
void libSCBW_gf_lSaveLadder (int lp_player);
void libSCBW_gf_lSaveLadderStats (int lp_player);
void libSCBW_gf_lSaveMatchupStats (int lp_player);
void libSCBW_gf_lSaveStartingStats (int lp_player);

// Trigger Declarations
trigger libSCBW_gt_Init;
trigger libSCBW_gt_GameModeText;
trigger libSCBW_gt_Updateevery1second;
trigger libSCBW_gt_Updateevery00625;
trigger libSCBW_gt_DroppedFromTransport;
trigger libSCBW_gt_DamageHydralisk;
trigger libSCBW_gt_DamageDragoon;
trigger libSCBW_gt_DamageScarab;
trigger libSCBW_gt_DamageMarine;
trigger libSCBW_gt_DamageGhost;
trigger libSCBW_gt_DamageVulture;
trigger libSCBW_gt_DamageGoliath;
trigger libSCBW_gt_DamageSiegeTank;
trigger libSCBW_gt_DamageSiegeTankSieged;
trigger libSCBW_gt_DamageSpiderMine;
trigger libSCBW_gt_DamageYamato;
trigger libSCBW_gt_WorkerIsCreated;
trigger libSCBW_gt_IdentifyHarvesting;
trigger libSCBW_gt_FinishedHarvesting;
trigger libSCBW_gt_DisableWaitatResource;
trigger libSCBW_gt_MineralFieldSpecial;
trigger libSCBW_gt_AttackReveal;
trigger libSCBW_gt_PatrolIssued;
trigger libSCBW_gt_ScarabPathing;
trigger libSCBW_gt_LimitActiveScarabs;
trigger libSCBW_gt_CarrierCreated;
trigger libSCBW_gt_InterceptorCreated;
trigger libSCBW_gt_CarrierOrderedToAttack;
trigger libSCBW_gt_CarrierLoop;
trigger libSCBW_gt_NydusCreatesExit;
trigger libSCBW_gt_UnitEntersNydus;
trigger libSCBW_gt_ExitDies;
trigger libSCBW_gt_UnitUsesBattery;
trigger libSCBW_gt_Corsair;
trigger libSCBW_gt_Devourer;
trigger libSCBW_gt_Firebat;
trigger libSCBW_gt_Ghost;
trigger libSCBW_gt_GoliathMissiles;
trigger libSCBW_gt_Hydralisk;
trigger libSCBW_gt_InfestedTerran;
trigger libSCBW_gt_MissileTurret;
trigger libSCBW_gt_SunkenColony;
trigger libSCBW_gt_VultureGrenade;
trigger libSCBW_gt_WraithMissiles;
trigger libSCBW_gt_MovingShot;
trigger libSCBW_gt_SpiderMineDetectCloaked;
trigger libSCBW_gt_Scarabbecomesidle;
trigger libSCBW_gt_RemovewhenShieldDepleted;
trigger libSCBW_gt_InfestUsed;
trigger libSCBW_gt_GrantVision;
trigger libSCBW_gt_Hallucination;
trigger libSCBW_gt_LimitSelection;
trigger libSCBW_gt_CTRL12UnitLimitonControlGroups;
trigger libSCBW_gt_SHIFT12UnitLimitonControlGroups;
trigger libSCBW_gt_DisableAutomine;
trigger libSCBW_gt_DisableRallyIdleWorkerButton;
trigger libSCBW_gt_DisableSmartCast;
trigger libSCBW_gt_ZergForcedRally;
trigger libSCBW_gt_DisableBestUnitLarvaMorphAbility;
trigger libSCBW_gt_AirUnitCreated;
trigger libSCBW_gt_ComsatGains50EnergyonCompletion;
trigger libSCBW_gt_DisablePushing;
trigger libSCBW_gt_CheckMovementThreads;
trigger libSCBW_gt_LadderInit;
trigger libSCBW_gt_sOpenStatsButtonPressed;
trigger libSCBW_gt_sStatsDialogButtonPressed;
trigger libSCBW_gt_osUpdateStats;
trigger libSCBW_gt_CheckPlayerStatus;

// Library Initialization
void libSCBW_InitVariables ();

